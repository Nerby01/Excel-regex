def load_address(index=1, header=1, chunksize=5000):
    """
    Loads the selected cell(s) of the active workbook into a pandas DataFrame. If you
    select a single cell that has adjacent cells, the range is auto-expanded (via
    current region) and turned into a pandas DataFrame. If you don't have pandas
    installed, it returns the values as nested lists.

    .. note::
      Only use this in an interactive context like e.g. a Jupyter notebook! Don't use
      this in a script as it depends on the active book.

    Parameters
    ----------
    index : bool or int, default 1
        Defines the number of columns on the left that will be turned into the
        DataFrame's index

    header : bool or int, default 1
        Defines the number of rows at the top that will be turned into the DataFrame's
        columns

    chunksize : int, default 5000
        Chunks the loading of big arrays.

    Examples
    --------
    >>> import xlwings as xw
    >>> xw.load_address()

    See also: :meth:`view <xlwings.view>`

    .. versionchanged:: 0.23.1
    """
    selection = books.active.selection
    if selection.shape == (1, 1):
        values = selection.options(
            pd.DataFrame, index=index, header=header, chunksize=chunksize
        ).address
    if pd:
        values = selection.options(
            pd.DataFrame, index=index, header=header, chunksize=chunksize
        ).address
    else:
        values = selection.options(chunksize=chunksize).address
    
    return values